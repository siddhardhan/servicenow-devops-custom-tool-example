version: '3'

dotenv: ['.env']

vars:
  DOCKER_REGISTRY: '{{.DOCKER_REGISTRY}}'
  DOCKER_IMAGE: '{{.DOCKER_IMAGE}}'
  DOCKER_TAG: '{{.DOCKER_TAG}}'
  PORT: '{{.PORT}}'
  RESOURCE_GROUP: '{{.AZURE_RESOURCE_GROUP}}'
  LOCATION: '{{.AZURE_LOCATION}}'
  CONTAINER_APP_NAME: '{{.CONTAINER_APP_NAME}}'
  CONTAINER_APP_ENV: '{{.CONTAINER_APP_ENV}}'

tasks:
  build:
    desc: Build the Go application locally
    cmds:
      - go build -o evidence-service

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  docker:build:
    desc: Build Docker image
    cmds:
      - docker build -t {{.DOCKER_IMAGE}}:{{.DOCKER_TAG}} .

  docker:run:
    desc: Run Docker container in background
    cmds:
      - docker run -d --name {{.DOCKER_IMAGE}} -p {{.PORT}}:{{.PORT}} {{.DOCKER_IMAGE}}:{{.DOCKER_TAG}}
      - echo "Container started in background. Access at http://localhost:{{.PORT}}"
      - echo "Use 'task docker:logs' to view logs or 'task docker:stop' to stop the container"

  docker:stop:
    desc: Stop running container
    cmds:
      - docker stop {{.DOCKER_IMAGE}} || true
      - docker rm {{.DOCKER_IMAGE}} || true

  docker:clean:
    desc: Remove Docker image
    cmds:
      - task: docker:stop
      - docker rmi {{.DOCKER_IMAGE}}:{{.DOCKER_TAG}} || true

  docker:logs:
    desc: View container logs
    cmds:
      - docker logs -f {{.DOCKER_IMAGE}}

  docker:status:
    desc: Check container status
    cmds:
      - docker ps --filter name={{.DOCKER_IMAGE}}

  dev:
    desc: Run the application locally for development
    cmds:
      - go run main.go

  docker:tag:
    desc: Tag Docker image for registry
    cmds:
      - docker tag {{.DOCKER_IMAGE}}:{{.DOCKER_TAG}} {{.DOCKER_REGISTRY}}/{{.DOCKER_IMAGE}}:{{.DOCKER_TAG}}

  docker:push:
    desc: Push Docker image to registry
    deps: [docker:tag]
    cmds:
      - docker push {{.DOCKER_REGISTRY}}/{{.DOCKER_IMAGE}}:{{.DOCKER_TAG}}

  azure:login:
    desc: Login to Azure
    cmds:
      - az login
      - az account set --subscription <your-subscription-id>

  azure:acr-login:
    desc: Login to Azure Container Registry
    cmds:
      - az acr login --name {{.DOCKER_REGISTRY}}

  azure:create-rg:
    desc: Create Azure Resource Group
    cmds:
      - az group create --name {{.RESOURCE_GROUP}} --location {{.LOCATION}}

  azure:create-env:
    desc: Create Azure Container Apps Environment
    deps: [azure:create-rg]
    cmds:
      - az containerapp env create
        --name {{.CONTAINER_APP_ENV}}
        --resource-group {{.RESOURCE_GROUP}}
        --location {{.LOCATION}}

  azure:deploy:
    desc: Deploy to Azure Container Apps
    deps: [docker:push]
    cmds:
      - az containerapp create
        --name {{.CONTAINER_APP_NAME}}
        --resource-group {{.RESOURCE_GROUP}}
        --environment {{.CONTAINER_APP_ENV}}
        --image {{.DOCKER_REGISTRY}}/{{.DOCKER_IMAGE}}:{{.DOCKER_TAG}}
        --target-port {{.PORT}}
        --ingress external
        --query properties.configuration.ingress.fqdn

  deploy:all:
    desc: Build, push and deploy to Azure
    cmds:
      - task: docker:build
      - task: docker:push
      - task: azure:deploy

  build:all:
    desc: Build and run Docker container locally
    cmds:
      - task: docker:clean
      - task: docker:build
      - task: docker:run
      - task: docker:logs
    sources:
      - main.go
      - go.mod
      - go.sum
      - Dockerfile
